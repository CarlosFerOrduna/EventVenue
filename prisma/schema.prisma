generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model Hall {
  idHall        String          @id @default(uuid()) @db.VarChar(36)
  name          String          @unique @db.VarChar(100)
  maxiQuantity  Int?            @db.UnsignedSmallInt()
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  deletedAt     DateTime?
  EventTypeHall EventTypeHall[]
}

model EventType {
  idEventType           String                  @id @default(uuid())
  name                  String                  @unique @db.VarChar(100)
  EventTypeHall         EventTypeHall[]
  EventTypeEventService EventTypeEventService[]
}

model EventTypeHall {
  idEventTypeOnHall String    @id @default(uuid())
  hall              Hall      @relation(fields: [idHall], references: [idHall])
  idHall            String    @db.VarChar(36)
  eventType         EventType @relation(fields: [idEventType], references: [idEventType])
  idEventType       String    @db.VarChar(36)
}

model EventService {
  idEventService        String                  @id @default(uuid()) @db.VarChar(36)
  name                  String                  @unique @db.VarChar(100)
  price                 Decimal                 @db.Decimal(18, 2)
  EventTypeEventService EventTypeEventService[]
}

model EventTypeEventService {
  idEventTypeEventService String       @id @default(uuid())
  eventType               EventType    @relation(fields: [idEventType], references: [idEventType])
  idEventType             String       @db.VarChar(36)
  eventService            EventService @relation(fields: [idEventService], references: [idEventService])
  idEventService          String       @db.VarChar(36)
}

model User {
  idUser      String        @id @default(uuid())
  email       String        @unique @db.VarChar(60)
  names       String?       @db.VarChar(100)
  surnames    String?       @db.VarChar(100)
  role        Role          @default(USER)
  UserAddress UserAddress[]
}

enum Role {
  USER
  ADMIN
}

model Address {
  idAddress    String        @id @default(uuid())
  streetName   String?       @db.VarChar(100)
  streetNumber Int?          @db.UnsignedSmallInt
  zipCode      String?       @db.VarChar(15)
  neighborhood String?       @db.VarChar(150)
  floor        String?       @db.VarChar(15)
  apartment    String?       @db.VarChar(15)
  city         String?       @db.VarChar(100)
  state        String?       @db.VarChar(100)
  country      String?       @db.VarChar(100)
  UserAddress  UserAddress[]
}

model UserAddress {
  idUserAddress String  @id @default(uuid())
  user          User    @relation(fields: [idUser], references: [idUser])
  idUser        String  @db.VarChar(36)
  address       Address @relation(fields: [idAddress], references: [idAddress])
  idAddress     String  @db.VarChar(36)
}

model Reservation {
  idReservation String    @id @default(uuid())
  start         DateTime?
  end           DateTime?
}
